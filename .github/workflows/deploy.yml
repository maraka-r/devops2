name: Build and Deploy React App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build React app
        run: npm run build
        working-directory: ./frontend

      - name: Archive build output
        run: tar -czf react-build.tar.gz -C frontend/build .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: react-build.tar.gz


  deploy-vm1:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: .

      - name: Copy build to VM1
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VM1_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: react-build.tar.gz
          target: ~/react-build.tar.gz

      - name: Deploy on VM1
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM1_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Remove any existing file or folder named react-build.tar.gz
            rm -rf ~/react-build.tar.gz
            
            # Move uploaded file from home directory (scp puts it here)
            mv ~/react-build.tar.gz ~/react-build.tar.gz
            
            # Make sure destination folder exists
            mkdir -p ~/react-app/dist
            
            # Extract archive into dist folder
            tar -xzf ~/react-build.tar.gz -C ~/react-app/dist
            
            # Remove archive after extraction
            rm ~/react-build.tar.gz
            
            # Check if nginx is installed, install if missing
            if ! command -v nginx &> /dev/null; then
              echo "Nginx not found. Installing..."
              if [ -f /etc/debian_version ]; then
                sudo apt-get update && sudo apt-get install -y nginx
              else
                sudo yum install -y nginx
              fi
              sudo systemctl enable nginx
            fi
            
            # Restart nginx service to apply changes
            sudo systemctl restart nginx


  deploy-vm2:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: .

      - name: Copy build to VM2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VM2_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: react-build.tar.gz
          target: ~/react-build.tar.gz

      - name: Deploy on VM2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM2_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rm -rf ~/react-build.tar.gz
            mv ~/react-build.tar.gz ~/react-build.tar.gz
            mkdir -p ~/react-app/dist
            tar -xzf ~/react-build.tar.gz -C ~/react-app/dist
            rm ~/react-build.tar.gz
            if ! command -v nginx &> /dev/null; then
              echo "Nginx not found. Installing..."
              if [ -f /etc/debian_version ]; then
                sudo apt-get update && sudo apt-get install -y nginx
              else
                sudo yum install -y nginx
              fi
              sudo systemctl enable nginx
            fi
            sudo systemctl restart nginx
