name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---- FRONTEND ----
      - name: Build React frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build
          tar -czf react-frontend.tar.gz build

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-frontend
          path: frontend/react-frontend.tar.gz

      # ---- BACKEND ----
      - name: Build backend
        working-directory: ./backend
        run: |
          docker build -t backend-api .
          docker save backend-api -o backend-api.tar.gz

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-api
          path: backend/backend-api.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---- DOWNLOAD ARTIFACTS ----
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: react-frontend
          path: .

      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-api
          path: .

      # ---- DEBUG AVANT SCP ----
      - name: List files before SCP
        run: ls -lh

      # ---- DEPLOY AVEC SCP ----
      - name: Copy files via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: |
            react-frontend.tar.gz
            backend-api.tar.gz
          target: /home/${{ secrets.SERVER_USER }}/deploy

      # ---- COMMANDES SUR LE SERVEUR ----
      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/deploy
            docker load -i backend-api.tar.gz
            tar -xzf react-frontend.tar.gz -C /var/www/html
            docker compose -f docker-compose.prod.yml up -d --force-recreate
