name: CI/CD Deployment with Health Check

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-west-3
      FRONTEND_ECR: 426941767449.dkr.ecr.eu-west-3.amazonaws.com/frontend-app:latest
      BACKEND_ECR: 426941767449.dkr.ecr.eu-west-3.amazonaws.com/backend-app:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Retrieve dynamic infrastructure info
        id: infra
        run: |
          echo "Retrieving Load Balancers and instance IPs..."

          FRONTEND_LB=$(aws elbv2 describe-load-balancers \
            --names AWS-IaC-React-Monito-frlb \
            --query "LoadBalancers[0].DNSName" --output text)
          BACKEND_LB=$(aws elbv2 describe-load-balancers \
            --names AWS-IaC-React-Monito-belb \
            --query "LoadBalancers[0].DNSName" --output text)

          FRONTEND_INSTANCES=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=AWS-IaC-React-Monito-frontend-*" \
            --query "Reservations[*].Instances[*].PublicIpAddress" \
            --output text)
          BACKEND_INSTANCES=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=AWS-IaC-React-Monito-backend-*" \
            --query "Reservations[*].Instances[*].PublicIpAddress" \
            --output text)

          echo "FRONTEND_LB=$FRONTEND_LB" >> $GITHUB_ENV
          echo "BACKEND_LB=$BACKEND_LB" >> $GITHUB_ENV
          echo "FRONTEND_INSTANCES=$FRONTEND_INSTANCES" >> $GITHUB_ENV
          echo "BACKEND_INSTANCES=$BACKEND_INSTANCES" >> $GITHUB_ENV

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 426941767449.dkr.ecr.eu-west-3.amazonaws.com

      - name: Build and push Docker images
        run: |
          docker build -t frontend ./frontend
          docker tag frontend $FRONTEND_ECR
          docker push $FRONTEND_ECR

          docker build -t backend ./backend
          docker tag backend $BACKEND_ECR
          docker push $BACKEND_ECR

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to EC2 frontend instances
        run: |
          for ip in $FRONTEND_INSTANCES; do
            ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$ip \
            "sudo docker stop frontend 2>/dev/null; \
             sudo docker rm frontend 2>/dev/null; \
             sudo docker run -d -p 80:80 --name frontend $FRONTEND_ECR"
          done

      - name: Deploy to EC2 backend instances
        run: |
          for ip in $BACKEND_INSTANCES; do
            ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$ip \
            "sudo docker stop backend 2>/dev/null; \
             sudo docker rm backend 2>/dev/null; \
             sudo docker run -d -p 5000:5000 --name backend $BACKEND_ECR"
          done

      - name: Check Target Group Health
        run: |
          echo "=== Frontend TG ==="
          aws elbv2 describe-target-health --target-group-arn arn:aws:elasticloadbalancing:eu-west-3:426941767449:targetgroup/AWS-IaC-React-Monito-frtg/24d0446d9041a48a \
            --query 'TargetHealthDescriptions[*].{ID:Target.Id,State:TargetHealth.State}' --output table

          echo "=== Backend TG ==="
          aws elbv2 describe-target-health --target-group-arn arn:aws:elasticloadbalancing:eu-west-3:426941767449:targetgroup/AWS-IaC-React-Monito-betg/0690d1c77c526315 \
            --query 'TargetHealthDescriptions[*].{ID:Target.Id,State:TargetHealth.State}' --output table

      - name: Test Load Balancers
        run: |
          echo "Testing Frontend LB"
          curl -s -o /dev/null -w "StatusCode %{http_code}\n" http://$FRONTEND_LB

          echo "Testing Backend LB"
          curl -s -o /dev/null -w "StatusCode %{http_code}\n" http://$BACKEND_LB:5000/health
