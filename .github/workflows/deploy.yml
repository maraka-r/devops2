name: Build, Push & Deploy (multi-VM + ALB - Rolling Update)

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/react-hello-world:latest
  SSH_USER: ec2-user # ubuntu si AMI Ubuntu

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy_rolling:
    needs: build_and_push
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1 # rolling update
      matrix:
        host_name: [ "HOST_1", "HOST_2" ] # noms symboliques
    steps:
      - name: Set host from secrets
        id: set-host
        run: |
          if [ "${{ matrix.host_name }}" = "HOST_1" ]; then
            echo "HOST=${{ secrets.HOST_1 }}" >> $GITHUB_ENV
          elif [ "${{ matrix.host_name }}" = "HOST_2" ]; then
            echo "HOST=${{ secrets.HOST_2 }}" >> $GITHUB_ENV
          fi

      - name: Deploy to ${{ matrix.host_name }}
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ env.HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker run -d \
              --name react-app \
              --pull always \
              --restart=always \
              -p 80:80 \
              $IMAGE_NAME
